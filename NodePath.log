      NodePath {
        getScope: [Function: getScope],
        setData: [Function: setData],
        getData: [Function: getData],
        buildCodeFrameError: [Function: buildCodeFrameError],
        traverse: [Function: traverse],
        mark: [Function: mark],
        set: [Function: set],
        getPathLocation: [Function: getPathLocation],        debug: [Function: debug],
        __esModule: true,
        findParent: [Function: findParent],
        find: [Function: find],        getFunctionParent: [Function:getFunctionParent],
        getStatementParent: [Function: getStatementParent],        getEarliestCommonAncestorFrom: [Function: getEarliestCommonAncestorFrom],
        getDeepestCommonAncestorFrom:[Function: getDeepestCommonAncestorFrom],
        getAncestry: [Function: getAncestry],
        isAncestor: [Function: isAncestor],
        isDescendant: [Function: isDescendant],
        inType: [Function: inType],
        inShadow: [Function: inShadow],
        getTypeAnnotation: [Function:getTypeAnnotation],
        _getTypeAnnotation: [Function: _getTypeAnnotation],
        isBaseType: [Function: isBaseType],
        couldBeBaseType: [Function: couldBeBaseType],
        baseTypeStrictlyMatches: [Function: baseTypeStrictlyMatches],
        isGenericType: [Function: isGenericType],
        replaceWithMultiple: [Function: replaceWithMultiple],
        replaceWithSourceString: [Function: replaceWithSourceString],
        replaceWith: [Function: replaceWith],
        _replaceWith: [Function: _replaceWith],
        replaceExpressionWithStatements: [Function: replaceExpressionWithStatements],
        replaceInline: [Function: replaceInline],
        evaluateTruthy: [Function: evaluateTruthy],
        evaluate: [Function: evaluate],
        toComputedKey: [Function: toComputedKey],
        ensureBlock: [Function: ensureBlock],
        arrowFunctionToShadowed: [Function: arrowFunctionToShadowed],
        is: [Function: has],
        matchesPattern: [Function: matchesPattern],
        has: [Function: has],
        isStatic: [Function: isStatic],
        isnt: [Function: isnt],
        equals: [Function: equals],
        isNodeType: [Function: isNodeType],
        canHaveVariableDeclarationOrExpression: [Function: canHaveVariableDeclarationOrExpression],
        canSwapBetweenExpressionAndStatement: [Function: canSwapBetweenExpressionAndStatement],
        isCompletionRecord: [Function: isCompletionRecord],
        isStatementOrBlock: [Function: isStatementOrBlock],
        referencesImport: [Function: referencesImport],
        getSource: [Function: getSource],
        willIMaybeExecuteBefore: [Function: willIMaybeExecuteBefore],
        _guessExecutionStatusRelativeTo: [Function: _guessExecutionStatusRelativeTo],
        _guessExecutionStatusRelativeToDifferentFunctions: [Function: _guessExecutionStatusRelativeToDifferentFunctions],
        resolve: [Function: resolve],
        _resolve: [Function: _resolve],
        call: [Function: call],
        _call: [Function: _call],
        isBlacklisted: [Function: isBlacklisted],
        visit: [Function: visit],
        skip: [Function: skip],
        skipKey: [Function: skipKey],
        stop: [Function: stop],
        setScope: [Function: setScope],
        setContext: [Function: setContext],
        resync: [Function: resync],
        _resyncParent: [Function: _resyncParent],
        _resyncKey: [Function: _resyncKey],
        _resyncList: [Function: _resyncList],
        _resyncRemoved: [Function: _resyncRemoved],
        popContext: [Function: popContext],
        pushContext: [Function: pushContext],
        setup: [Function: setup],
        setKey: [Function: setKey],
        requeue: [Function: requeue],
        _getQueueContexts: [Function:_getQueueContexts],
        remove: [Function: remove],
        _callRemovalHooks: [Function:_callRemovalHooks],
        _remove: [Function: _remove],
        _markRemoved: [Function: _markRemoved],
        _assertUnremoved: [Function: _assertUnremoved],
        insertBefore: [Function: insertBefore],
        _containerInsert: [Function: _containerInsert],
        _containerInsertBefore: [Function: _containerInsertBefore],
        _containerInsertAfter: [Function: _containerInsertAfter],
        _maybePopFromStatements: [Function: _maybePopFromStatements],
        insertAfter: [Function: insertAfter],
        updateSiblingKeys: [Function:updateSiblingKeys],
        _verifyNodeList: [Function: _verifyNodeList],
        unshiftContainer: [Function: unshiftContainer],
        pushContainer: [Function: pushContainer],
        hoist: [Function: hoist],
        getOpposite: [Function: getOpposite],
        getCompletionRecords: [Function: getCompletionRecords],
        getSibling: [Function: getSibling],
        getPrevSibling: [Function: getPrevSibling],
        getNextSibling: [Function: getNextSibling],
        getAllNextSiblings: [Function: getAllNextSiblings],
        getAllPrevSiblings: [Function: getAllPrevSiblings],
        get: [Function: get],
        _getKey: [Function: _getKey],
        _getPattern: [Function: _getPattern],
        getBindingIdentifiers: [Function: getBindingIdentifiers],
        getOuterBindingIdentifiers: [Function: getOuterBindingIdentifiers],
        getBindingIdentifierPaths: [Function: getBindingIdentifierPaths],
        getOuterBindingIdentifierPaths: [Function: getOuterBindingIdentifierPaths],
        shareCommentsWithSiblings: [Function: shareCommentsWithSiblings],
        addComment: [Function: addComment],
        addComments: [Function: addComments],
        isArrayExpression: [Function],
        assertArrayExpression: [Function],
        isAssignmentExpression: [Function],
        assertAssignmentExpression: [Function],
        isBinaryExpression: [Function],
        assertBinaryExpression: [Function],
        isDirective: [Function],
        assertDirective: [Function],
        isDirectiveLiteral: [Function],
        assertDirectiveLiteral: [Function],
        isBlockStatement: [Function],
        assertBlockStatement: [Function],
        isBreakStatement: [Function],
        assertBreakStatement: [Function],
        isCallExpression: [Function],
        assertCallExpression: [Function],
        isCatchClause: [Function],
        assertCatchClause: [Function],
        isConditionalExpression: [Function],
        assertConditionalExpression: [Function],
        isContinueStatement: [Function],
        assertContinueStatement: [Function],
        isDebuggerStatement: [Function],
        assertDebuggerStatement: [Function],
        isDoWhileStatement: [Function],
        assertDoWhileStatement: [Function],
        isEmptyStatement: [Function],
        assertEmptyStatement: [Function],
        isExpressionStatement: [Function],
        assertExpressionStatement: [Function],
        isFile: [Function],
        assertFile: [Function],
        isForInStatement: [Function],
        assertForInStatement: [Function],
        isForStatement: [Function],
        assertForStatement: [Function],
        isFunctionDeclaration: [Function],
        assertFunctionDeclaration: [Function],
        isFunctionExpression: [Function],
        assertFunctionExpression: [Function],
        isIdentifier: [Function],
        assertIdentifier: [Function],
        isIfStatement: [Function],
        assertIfStatement: [Function],
        isLabeledStatement: [Function],
        assertLabeledStatement: [Function],
        isStringLiteral: [Function],
        assertStringLiteral: [Function],
        isNumericLiteral: [Function],
        assertNumericLiteral: [Function],
        isNullLiteral: [Function],
        assertNullLiteral: [Function],
        isBooleanLiteral: [Function],
        assertBooleanLiteral: [Function],
        isRegExpLiteral: [Function],
        assertRegExpLiteral: [Function],
        isLogicalExpression: [Function],
        assertLogicalExpression: [Function],
        isMemberExpression: [Function],
        assertMemberExpression: [Function],
        isNewExpression: [Function],
        assertNewExpression: [Function],
        isProgram: [Function],
        assertProgram: [Function],
        isObjectExpression: [Function],
        assertObjectExpression: [Function],
        isObjectMethod: [Function],
        assertObjectMethod: [Function],
        isObjectProperty: [Function],
        assertObjectProperty: [Function],
        isRestElement: [Function],
        assertRestElement: [Function],
        isReturnStatement: [Function],
        assertReturnStatement: [Function],
        isSequenceExpression: [Function],
        assertSequenceExpression: [Function],
        isSwitchCase: [Function],
        assertSwitchCase: [Function],
        isSwitchStatement: [Function],
        assertSwitchStatement: [Function],
        isThisExpression: [Function],
        assertThisExpression: [Function],
        isThrowStatement: [Function],
        assertThrowStatement: [Function],
        isTryStatement: [Function],
        assertTryStatement: [Function],
        isUnaryExpression: [Function],
        assertUnaryExpression: [Function],
        isUpdateExpression: [Function],
        assertUpdateExpression: [Function],
        isVariableDeclaration: [Function],
        assertVariableDeclaration: [Function],
        isVariableDeclarator: [Function],
        assertVariableDeclarator: [Function],
        isWhileStatement: [Function],
        assertWhileStatement: [Function],
        isWithStatement: [Function],
        assertWithStatement: [Function],
        isAssignmentPattern: [Function],
        assertAssignmentPattern: [Function],
        isArrayPattern: [Function],
        assertArrayPattern: [Function],
        isArrowFunctionExpression: [Function],
        assertArrowFunctionExpression: [Function],
        isClassBody: [Function],
        assertClassBody: [Function],
        isClassDeclaration: [Function],
        assertClassDeclaration: [Function],
        isClassExpression: [Function],
        assertClassExpression: [Function],
        isExportAllDeclaration: [Function],
        assertExportAllDeclaration: [Function],
        isExportDefaultDeclaration: [Function],
        assertExportDefaultDeclaration: [Function],
        isExportNamedDeclaration: [Function],
        assertExportNamedDeclaration:[Function],
        isExportSpecifier: [Function],
        assertExportSpecifier: [Function],
        isForOfStatement: [Function],
        assertForOfStatement: [Function],
        isImportDeclaration: [Function],
        assertImportDeclaration: [Function],
        isImportDefaultSpecifier: [Function],
        assertImportDefaultSpecifier:[Function],
        isImportNamespaceSpecifier: [Function],
        assertImportNamespaceSpecifier: [Function],
        isImportSpecifier: [Function],
        assertImportSpecifier: [Function],
        isMetaProperty: [Function],
        assertMetaProperty: [Function],
        isClassMethod: [Function],
        assertClassMethod: [Function],
        isObjectPattern: [Function],
        assertObjectPattern: [Function],
        isSpreadElement: [Function],
        assertSpreadElement: [Function],
        isSuper: [Function],
        assertSuper: [Function],
        isTaggedTemplateExpression: [Function],
        assertTaggedTemplateExpression: [Function],
        isTemplateElement: [Function],
        assertTemplateElement: [Function],
        isTemplateLiteral: [Function],
        assertTemplateLiteral: [Function],
        isYieldExpression: [Function],
        assertYieldExpression: [Function],
        isAnyTypeAnnotation: [Function],
        assertAnyTypeAnnotation: [Function],
        isArrayTypeAnnotation: [Function],
        assertArrayTypeAnnotation: [Function],
        isBooleanTypeAnnotation: [Function],
        assertBooleanTypeAnnotation: [Function],
        isBooleanLiteralTypeAnnotation: [Function],
        assertBooleanLiteralTypeAnnotation: [Function],
        isNullLiteralTypeAnnotation: [Function],
        assertNullLiteralTypeAnnotation: [Function],
        isClassImplements: [Function],
        assertClassImplements: [Function],
        isClassProperty: [Function],
        assertClassProperty: [Function],
        isDeclareClass: [Function],
        assertDeclareClass: [Function],
        isDeclareFunction: [Function],
        assertDeclareFunction: [Function],
        isDeclareInterface: [Function],
        assertDeclareInterface: [Function],
        isDeclareModule: [Function],
        assertDeclareModule: [Function],
        isDeclareModuleExports: [Function],
        assertDeclareModuleExports: [Function],
        isDeclareTypeAlias: [Function],
        assertDeclareTypeAlias: [Function],
        isDeclareOpaqueType: [Function],
        assertDeclareOpaqueType: [Function],
        isDeclareVariable: [Function],
        assertDeclareVariable: [Function],
        isDeclareExportDeclaration: [Function],
        assertDeclareExportDeclaration: [Function],
        isExistentialTypeParam: [Function],
        assertExistentialTypeParam: [Function],
        isFunctionTypeAnnotation: [Function],
        assertFunctionTypeAnnotation:[Function],
        isFunctionTypeParam: [Function],
        assertFunctionTypeParam: [Function],
        isGenericTypeAnnotation: [Function],
        assertGenericTypeAnnotation: [Function],
        isInterfaceExtends: [Function],
        assertInterfaceExtends: [Function],
        isInterfaceDeclaration: [Function],
        assertInterfaceDeclaration: [Function],
        isIntersectionTypeAnnotation:[Function],
        assertIntersectionTypeAnnotation: [Function],
        isMixedTypeAnnotation: [Function],
        assertMixedTypeAnnotation: [Function],
        isEmptyTypeAnnotation: [Function],
        assertEmptyTypeAnnotation: [Function],
        isNullableTypeAnnotation: [Function],
        assertNullableTypeAnnotation:[Function],
        isNumericLiteralTypeAnnotation: [Function],
        assertNumericLiteralTypeAnnotation: [Function],
        isNumberTypeAnnotation: [Function],
        assertNumberTypeAnnotation: [Function],
        isStringLiteralTypeAnnotation: [Function],
        assertStringLiteralTypeAnnotation: [Function],
        isStringTypeAnnotation: [Function],
        assertStringTypeAnnotation: [Function],
        isThisTypeAnnotation: [Function],
        assertThisTypeAnnotation: [Function],
        isTupleTypeAnnotation: [Function],
        assertTupleTypeAnnotation: [Function],
        isTypeofTypeAnnotation: [Function],
        assertTypeofTypeAnnotation: [Function],
        isTypeAlias: [Function],
        assertTypeAlias: [Function],
        isOpaqueType: [Function],
        assertOpaqueType: [Function],
        isTypeAnnotation: [Function],
        assertTypeAnnotation: [Function],
        isTypeCastExpression: [Function],
        assertTypeCastExpression: [Function],
        isTypeParameter: [Function],
        assertTypeParameter: [Function],
        isTypeParameterDeclaration: [Function],
        assertTypeParameterDeclaration: [Function],
        isTypeParameterInstantiation:[Function],
        assertTypeParameterInstantiation: [Function],
        isObjectTypeAnnotation: [Function],
        assertObjectTypeAnnotation: [Function],
        isObjectTypeCallProperty: [Function],
        assertObjectTypeCallProperty:[Function],
        isObjectTypeIndexer: [Function],
        assertObjectTypeIndexer: [Function],
        isObjectTypeProperty: [Function],
        assertObjectTypeProperty: [Function],
        isObjectTypeSpreadProperty: [Function],
        assertObjectTypeSpreadProperty: [Function],
        isQualifiedTypeIdentifier: [Function],
        assertQualifiedTypeIdentifier: [Function],
        isUnionTypeAnnotation: [Function],
        assertUnionTypeAnnotation: [Function],
        isVoidTypeAnnotation: [Function],
        assertVoidTypeAnnotation: [Function],
        isJSXAttribute: [Function],
        assertJSXAttribute: [Function],
        isJSXClosingElement: [Function],
        assertJSXClosingElement: [Function],
        isJSXElement: [Function],
        assertJSXElement: [Function],
        isJSXEmptyExpression: [Function],
        assertJSXEmptyExpression: [Function],
        isJSXExpressionContainer: [Function],
        assertJSXExpressionContainer:[Function],
        isJSXSpreadChild: [Function],
        assertJSXSpreadChild: [Function],
        isJSXIdentifier: [Function],
        assertJSXIdentifier: [Function],
        isJSXMemberExpression: [Function],
        assertJSXMemberExpression: [Function],
        isJSXNamespacedName: [Function],
        assertJSXNamespacedName: [Function],
        isJSXOpeningElement: [Function],
        assertJSXOpeningElement: [Function],
        isJSXSpreadAttribute: [Function],
        assertJSXSpreadAttribute: [Function],
        isJSXText: [Function],
        assertJSXText: [Function],
        isNoop: [Function],
        assertNoop: [Function],
        isParenthesizedExpression: [Function],
        assertParenthesizedExpression: [Function],
        isAwaitExpression: [Function],
        assertAwaitExpression: [Function],
        isForAwaitStatement: [Function],
        assertForAwaitStatement: [Function],
        isBindExpression: [Function],
        assertBindExpression: [Function],
        isImport: [Function],
        assertImport: [Function],
        isDecorator: [Function],
        assertDecorator: [Function],
        isDoExpression: [Function],
        assertDoExpression: [Function],
        isExportDefaultSpecifier: [Function],
        assertExportDefaultSpecifier:[Function],
        isExportNamespaceSpecifier: [Function],
        assertExportNamespaceSpecifier: [Function],
        isRestProperty: [Function],
        assertRestProperty: [Function],
        isSpreadProperty: [Function],
        assertSpreadProperty: [Function],
        isExpression: [Function],
        assertExpression: [Function],
        isBinary: [Function],
        assertBinary: [Function],
        isScopable: [Function],
        assertScopable: [Function],
        isBlockParent: [Function],
        assertBlockParent: [Function],
        isBlock: [Function],
        assertBlock: [Function],
        isStatement: [Function],
        assertStatement: [Function],
        isTerminatorless: [Function],
        assertTerminatorless: [Function],
        isCompletionStatement: [Function],
        assertCompletionStatement: [Function],
        isConditional: [Function],
        assertConditional: [Function],
        isLoop: [Function],
        assertLoop: [Function],
        isWhile: [Function],
        assertWhile: [Function],
        isExpressionWrapper: [Function],
        assertExpressionWrapper: [Function],
        isFor: [Function],
        assertFor: [Function],
        isForXStatement: [Function],
        assertForXStatement: [Function],
        isFunction: [Function],
        assertFunction: [Function],
        isFunctionParent: [Function],
        assertFunctionParent: [Function],
        isPureish: [Function],
        assertPureish: [Function],
        isDeclaration: [Function],
        assertDeclaration: [Function],
        isLVal: [Function],
        assertLVal: [Function],
        isLiteral: [Function],
        assertLiteral: [Function],
        isImmutable: [Function],
        assertImmutable: [Function],
        isUserWhitespacable: [Function],
        assertUserWhitespacable: [Function],
        isMethod: [Function],
        assertMethod: [Function],
        isObjectMember: [Function],
        assertObjectMember: [Function],
        isProperty: [Function],
        assertProperty: [Function],
        isUnaryLike: [Function],
        assertUnaryLike: [Function],
        isPattern: [Function],
        assertPattern: [Function],
        isClass: [Function],
        assertClass: [Function],
        isModuleDeclaration: [Function],
        assertModuleDeclaration: [Function],
        isExportDeclaration: [Function],
        assertExportDeclaration: [Function],
        isModuleSpecifier: [Function],
        assertModuleSpecifier: [Function],
        isFlow: [Function],
        assertFlow: [Function],
        isFlowBaseAnnotation: [Function],
        assertFlowBaseAnnotation: [Function],
        isFlowDeclaration: [Function],
        assertFlowDeclaration: [Function],
        isJSX: [Function],
        assertJSX: [Function],
        isNumberLiteral: [Function],
        assertNumberLiteral: [Function],
        isRegexLiteral: [Function],
        assertRegexLiteral: [Function],
        isReferencedIdentifier: [Function],
        isReferencedMemberExpression:[Function],
        isBindingIdentifier: [Function],
        isScope: [Function],
        isReferenced: [Function],
        isBlockScoped: [Function],
        isVar: [Function],
        isUser: [Function],
        isGenerated: [Function],
        isPure: [Function] }
